let n = 0;
while (++n < 5) {
  setTimeout(() => console.log(n), 10 + n);
}

// Что будет выведено в консоль?

// 5 5 5 5

/*
Это происходит из-за работы асинхронной функции setTimeout внутри цикла while.
В каждой итерации цикла while, переменная n увеличивается на 1 и передается
в функцию setTimeout. Время задержки для каждого вызова setTimeout также
увеличивается на 1, так как n добавляется к исходному значению 10. Таким образом,
первый вызов setTimeout имеет время задержки 11 миллисекунд,
второй - 12 миллисекунды и так далее.
Однако, эти вызовы setTimeout выполняются асинхронно. Цикл while не ждет, пока
функции setTimeout выполнится, а продолжает итерации. К моменту, когда функции
setTimeout начинают выполняться, цикл while уже завершился, и значение n равно 5.
Таким образом, при вызове функций setTimeout для всех задержек (11, 12, 13, 14),
значение n уже становится равным 5. Поэтому в консоль выводится значение 5 четыре раза.
*/
